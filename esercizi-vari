-- # write your SQL statement here: you are given a table 'removeexclamationmarks'
--with column 's', return a table with column 's' and your result in a column named 'res'.


select s  , replace(s , '!' ,'') as res
from removeexclamationmarks

SELECT s, TRANSLATE(s,'!','') as res 
FROM removeexclamationmarks


###########################################################################################################

-- # write your SQL statement here: you are given a table 
--'ispalindrome' with column 'str', return a table with column 'str' and your result in a column named 'res'.


select str ,
case

  when Upper(str) = reverse(Upper(str)) then true
  else false

end as res

from ispalindrome



###########################################################################################################






Given the following table 'decimals':

** decimals table schema **

    id
    number1
    number2

Return a table with one column (mod) which is the output of number1 modulus number2.

select MOD(number1 , number2 ) as mod
from decimals


SELECT
  NUMBER1 % NUMBER2 AS MOD
FROM
  DECIMALS



###########################################################################################################




Very simple, given an integer or a floating-point number, find its opposite.

Examples:

1: -1
14: -14
-34: 34

You will be given a table: opposite, with a column: number. Return a table with a column: res.


-- You will be given a table:
--"opposite", with a column: "number". Return a table with a column: "res".

select - number as res
from opposite


###########################################################################################



--# write your SQL statement here: you are given a table 
--'repeatstr' with columns 'n' and 's', return a table with all columns and your result in a column named 'res'.


select s , n ,REPEAT(s , n ) as res
from repeatstr







